"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),p=c(n),m=l,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[p]="string"==typeof e?e:l,o[1]=r;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5967:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(7462),l=(n(7294),n(3905));const i={},o="Playbooks",r={unversionedId:"ansible/playbooks",id:"ansible/playbooks",title:"Playbooks",description:"Conditional checks",source:"@site/docs/ansible/playbooks.md",sourceDirName:"ansible",slug:"/ansible/playbooks",permalink:"/docs/ansible/playbooks",draft:!1,editUrl:"https://github.com/agarthetiger/docusaurus/tree/main/docs/ansible/playbooks.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lookup Plugins",permalink:"/docs/ansible/lookup-plugins"},next:{title:"Roles",permalink:"/docs/ansible/roles"}},s={},c=[{value:"Conditional checks",id:"conditional-checks",level:2},{value:"Conditional check examples",id:"conditional-check-examples",level:3},{value:"Required variables",id:"required-variables",level:2},{value:"Filters",id:"filters",level:2},{value:"Debug",id:"debug",level:2},{value:"Play options",id:"play-options",level:2},{value:"Import and Include",id:"import-and-include",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"playbooks"},"Playbooks"),(0,l.kt)("h2",{id:"conditional-checks"},"Conditional checks"),(0,l.kt)("p",null,"Conditional checks use the ",(0,l.kt)("inlineCode",{parentName:"p"},"when:")," syntax. When conditions can use raw Jinja2 expressions but can execute regular python code so can access methods like String.find() to check for a text match in a String. Multiple conditions should be enclosed with parenthesis, multiple conditions can be specified in a list where they are all required to be true (logical AND)."),(0,l.kt)("h3",{id:"conditional-check-examples"},"Conditional check examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'when: \n  - tomcat_status_result.stdout.find("JVM is running.") > -1\n  - tomcat_status_result.stderr != ""\n  - tomcat_status_result.rc == 0\n\n---\n- hosts: all\n  tasks:\n    - name: "print inventory vars"\n      debug:\n        var: "{{ item }}"\n      with_items:\n        - inventory_dir\n        - inventory_file\n      when: inventory_dir | regex_search(\'dev$\')\n\n- hosts: all\n  tasks:\n    - name: "apply stub role"\n      include_role:\n        name: issuer-wallet-stub\n      when: inventory_dir | regex_search(\'dev$\')\n')),(0,l.kt)("h2",{id:"required-variables"},"Required variables"),(0,l.kt)("p",null,"Often at the beginning of a Playbook or Role you may want to assert that all mandatory variables have been defined. This can avoid more difficult problems further into a playbook, like only finding this out mid-way through a production deployment. "),(0,l.kt)("p",null,"vars.yml"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"REQUIRED_VARS:\n  - application_version # Exists\n  - i_dont_exist\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Ensure required variables have been set\n  assert:\n    that: lookup('vars', item) is defined\n  loop: \"{{ REQUIRED_VARS }}\"\n  delegate_to: localhost\n  run_once: Yes\n")),(0,l.kt)("p",null,"By using a list of varaible names in vars.yml for example in an Ansible Role, it keeps all the variable declarations together. Note that you cannot use ",(0,l.kt)("inlineCode",{parentName:"p"},"is defined")," directly on ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ item }}"),", you will get the following output (v2.10.4)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'ok: [localhost] => (item=i_dont_exist) => {\n    "ansible_loop_var": "item",\n    "i_dont_exist": "VARIABLE IS NOT DEFINED!",\n    "item": "i_dont_exist"\n}\n')),(0,l.kt)("h2",{id:"filters"},"Filters"),(0,l.kt)("p",null,"See documentation on ",(0,l.kt)("a",{parentName:"p",href:"http://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html"},"filters"),".\nFilters use Jinja2, and Ansible ships with some extra ones to those available in Jinja2. Remember that if using a filter in a conditional statement that python methods are also accessible. "),(0,l.kt)("p",null,"Also note that the online ",(0,l.kt)("a",{parentName:"p",href:"http://jinja.pocoo.org/docs/2.10/templates/#builtin-filters"},"Jinja2 documentation")," doesn't go back to python-jinja2 2.7 which is what is provided in RedHat repos for RHEL7. There are no RHEL plans to update Jinja2 to anything later, so what you read on the Jinja website will include features not available to Ansible on RHEL7, because of the Jinja2 version. "),(0,l.kt)("p",null,"To select an item from a list, based on an attribute, use the selectattr with the match filter, as the equalsto filter is only available in Jinja2 2.8."),(0,l.kt)("p",null,"Given a yaml file like this,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"    projects:\n      - name: project-a\n        version: '2.3.4-SNAPSHOT'\n      - name: project-b\n        version: '1.2.3-SNAPSHOT'\n      - name: project-c\n        value: '5.6.7-SNAPSHOT'\n")),(0,l.kt)("p",null,"Select the version of project-b using the following expression."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"    - hosts: project-hosts-b\n      vars:\n        - deployable_version: \"{{ projects | selectattr('name', 'match', '^project-b$') | map(attribute='version') | list | first }}\"\n")),(0,l.kt)("p",null,"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://www.oznetnerd.com/jinja2-selectattr-filter/"},"jinja2-selectattr-filter"))),(0,l.kt)("h2",{id:"debug"},"Debug"),(0,l.kt)("p",null,"You can print a message with variable information in it, combine this with the verbosity level, below which the debug will not output anything. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'- debug:\n    msg: "System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}"\n    verbosity: 4\n  when: ansible_default_ipv4.gateway is defined\n')),(0,l.kt)("p",null,"See documentation for the ",(0,l.kt)("a",{parentName:"p",href:"http://docs.ansible.com/ansible/latest/modules/debug_module.html"},"debug module"),"."),(0,l.kt)("h2",{id:"play-options"},"Play options"),(0,l.kt)("p",null,"Disable facts gathering"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- hosts: all\n  gather_facts: false\n")),(0,l.kt)("h2",{id:"import-and-include"},"Import and Include"),(0,l.kt)("p",null,"Ansible documentation on ",(0,l.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse.html"},"Creating reusable playbooks"),"\nNote there are trade-offs when selecting between static and dynamic, any import","*"," tasks will be static, any include","*"," tasks will be dynamic. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All ",(0,l.kt)("inlineCode",{parentName:"li"},"import*")," statements are pre-processed at the time playbooks are parsed."),(0,l.kt)("li",{parentName:"ul"},"All ",(0,l.kt)("inlineCode",{parentName:"li"},"include*")," statements are processed as they encountered during the execution of the playbook.")))}p.isMDXComponent=!0}}]);